openapi: 3.0.3
info:
  title: Enigma Backend
  version: 0.0.1
servers:
  - url: http://localhost:5000
tags:
  - name: general
  - name: variant
    description: The variant of the Enigma
  - name: rotor
  - name: plugboard

paths:
  /variants:
    get:
      tags:
        - variant
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variant:
    put:
      tags:
        - variant
      parameters:
        - name: variant
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: variant=B
  /rotors:
    get:
      tags:
        - rotor
      description: The `variant` cookie has to be set.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    entry:
                      type: boolean
                    reflector:
                      type: boolean
  /rotor/{rotornr}:
    put:
      tags:
        - rotor
      description: The `variant` cookie has to be set.
      parameters:
        - name: rotornr
          in: path
        - name: rotor
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "rotors={ 0: ETW }"
  /rotor/{rotornr}/position:
    get:
      tags:
        - rotor
      description: Specify the starting position of rotor.
      parameters:
        - name: rotornr
          in: path
          required: True
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
                mininum: 1
                maximum: 26
                description: "Number from 1 to 26"
    put:
      tags:
        - rotor
      parameters:
        - name: rotornr
          in: path
        - name: position
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "position={0: 25, 1: 12, 2:1}"
                description: Dictionary keys are rotor slots as 0-2
  /encrypt:
    put:
      tags:
        - general
      parameters:
        - name: letter
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "history=abc ; position={0: 26, 1: 12, 2:1}"
              description: |
                ring position is incremented with each keystroke and
                the history updated
          content:
            application/json:
              schema:
                type: string
              description: The encrypted letter
openapi: 3.0.3
info:
  title: Enigma Backend
  version: 0.0.1
servers:
  - url: http://localhost:5000
tags:
  - name: variant
    description: The variant of the Enigma
  - name: rotor
  - name: general
paths:
  /variants:
    get:
      tags:
        - variant
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variant:
    put:
      tags:
        - variant
      parameters:
        - name: variant
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: variant=B
  /rotors:
    get:
      tags:
        - rotor
      description: The `variant` cookie has to be set.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    entry:
                      type: boolean
                    reflector:
                      type: boolean
  /rotor/{rotornr}:
    put:
      tags:
        - rotor
      description: The `variant` cookie has to be set.
      parameters:
        - name: rotornr
          in: path
        - name: rotor
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "rotors={ 0: ETW }"
  /rotor/{rotornr}/position:
    get:
      tags:
        - rotor
      description: Specify the starting position of rotor.
      parameters:
        - name: rotornr
          in: path
          required: True
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
                mininum: 1
                maximum: 26
                description: "Number from 1 to 26"
    put:
      tags:
        - rotor
      parameters:
        - name: rotornr
          in: path
        - name: position
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "position={0: 25, 1: 12, 2:1}"
                description: Dictionary keys are rotor slots as 0-2
  /encrypt:
    put:
      tags:
        - general
      parameters:
        - name: letter
          in: header
          required: true
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "history=abc ; position={0: 26, 1: 12, 2:1}"
              description: |
                ring position is incremented with each keystroke and
                the history updated
          content:
            application/json:
              schema:
                type: string
              description: The encrypted letter
  /history:
    get:
      tags:
        - general
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
              description: Provides the up to '140' character history
